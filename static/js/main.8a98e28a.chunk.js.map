{"version":3,"sources":["Components/Navigation/Navigation.js","Assets/facial-recognition.svg","Components/Logo/Logo.js","Components/ImageLinkForm/ImageLinkForm.js","Components/Rank/Rank.js","Components/FaceRecognition/FaceRecognition.js","Assets/close.svg","Services/ServerApi.js","Components/Signin/Signin.js","Components/Register/Register.js","Settings/particlesOptions.js","App.js","reportWebVitals.js","index.js"],"names":["Navigation","actualRoute","onRouteChange","isSignedIn","style","display","justifyContent","onClick","className","Logo","options","max","height","width","paddingTop","alt","src","BrainSVG","ImageLinkForm","this","props","clearState","type","placeholder","onChange","onInputChange","onBtnSubmit","Component","Rank","user","name","entries","FaceRecognition","box","imageUrl","id","map","face","index","top","top_row","right","right_col","bottom","bottom_row","left","left_col","ServerApi","Signin","onEmailChange","event","setState","signInUser","target","value","onPwrdChange","signInPwrd","removeErrors","targetId","document","getElementsByClassName","classList","remove","error","console","warn","showLoginError","state","add","setTimeout","onSubmitSigiIn","fetch","method","headers","body","JSON","stringify","givenUser","givenPassword","then","response","json","data","isSuccessful","msg","loadUsers","checkInputs","goHome","userError","pwrdError","window","clearTimeout","trim","checkReturn","key","onKeyDown","closeBtn","Register","onNameChange","registerName","onUserChange","registerUser","registerEmail","registerPwrd","onRepeatPwrdChange","secondPwrd","showEmailError","showRegisterError","onSubmitRegister","validator","isEmail","givenName","givenEmail","nameError","emailError","repeatPwrdError","particlesOptions","particles","collisions","enable","number","density","value_area","shape","image","line_linked","shadow","color","blur","App","user_name","email","joined","userName","calculateFaceLocation","clarifaiFace","outputs","regions","getElementById","Number","faceBoxes","box_obj","obj","region_info","bounding_box","input","requestApi","baseState","count","Object","assign","catch","log","route","params","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.8a98e28a.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Navigation.css\";\n\nconst Navigation = ({ actualRoute, onRouteChange, isSignedIn }) => {\n  if (isSignedIn) {\n    return (\n      <nav style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\n        <p\n          onClick={() => onRouteChange(\"signin\")}\n          className=\"sign-btn f3 pa3 pointer\"\n        >\n          Sign out\n        </p>\n      </nav>\n    );\n  } else if (actualRoute === \"signin\") {\n    return (\n      <nav style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\n        <p\n          onClick={() => onRouteChange(\"signin\")}\n          className=\"disable sign-btn f3 pa3\"\n        >\n          Sign in\n        </p>\n\n        <p\n          onClick={() => onRouteChange(\"register\")}\n          className=\"enable sign-btn f3 pa3 pointer\"\n        >\n          Register\n        </p>\n      </nav>\n    );\n  } else if (actualRoute === \"register\") {\n    return (\n      <nav style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\n        <p\n          onClick={() => onRouteChange(\"signin\")}\n          className=\"enable sign-btn f3 pa3 pointer\"\n        >\n          Sign in\n        </p>\n\n        <p\n          onClick={() => onRouteChange(\"register\")}\n          className=\"disable sign-btn f3 pa3\"\n        >\n          Register\n        </p>\n      </nav>\n    );\n  }\n};\n\nexport default Navigation;\n","export default __webpack_public_path__ + \"static/media/facial-recognition.a4f0dcd5.svg\";","import React from \"react\";\nimport Tilt from \"react-tilt\";\nimport \"./Logo.css\";\nimport BrainSVG from \"../../Assets/facial-recognition.svg\";\n\nconst Logo = () => {\n    return (\n        <div className=\"logo-div ma4 mt0\">\n            <Tilt\n                className=\"Tilt br2 shadow-2\"\n                options={{ max: 30 }}\n                style={{ height: 150, width: 150 }}\n            >\n                <div className=\"Tilt-inner pa3\">\n                    <img\n                        style={{ paddingTop: \"5px\" }}\n                        alt=\"logo\"\n                        src={BrainSVG}\n                    />\n                </div>\n            </Tilt>\n        </div>\n    );\n};\n\nexport default Logo;\n","import React, { Component } from \"react\";\nimport \"./ImageLinkForm.css\";\n\nclass ImageLinkForm extends Component {\n  componentWillUnmount() {\n    this.props.clearState();\n  }\n\n  render() {\n    return (\n      <div>\n        <p className=\"input-title f2\">\n          {\"We will detect some faces on your photos! Give it a try\"}\n        </p>\n\n        <div className=\"center\">\n          <div className=\"form center pa4 br3 shadow-5\">\n            <input\n              className=\"input-field f4 pa2 w-70\"\n              type=\"text\"\n              placeholder=\"URL\"\n              onChange={this.props.onInputChange}\n            />\n            <button\n              className=\"input-btn w-30 f4 ph3 pv2 dib pointer\"\n              onClick={this.props.onBtnSubmit}\n            >\n              Detect\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ImageLinkForm;\n","import React from \"react\";\n\nconst Rank = ({ user }) => {\n  const { name, entries } = user;\n\n  return (\n    <div>\n      <div className=\"white f3\">{`${name}, your current rank is ...`}</div>\n      <div className=\"white f1\">{`#${entries}`}</div>\n    </div>\n  );\n};\n\nexport default Rank;\n","import React from \"react\";\nimport \"./FaceRecognition.css\";\n\nconst FaceRecognition = ({ box, imageUrl }) => {\n  return (\n    <div className=\"center ma\">\n      <div className=\"absolute mt2 mb2\">\n        <img\n          id=\"input-image\"\n          alt=\"\"\n          src={imageUrl}\n          width=\"500px\"\n          height=\"auto\"\n        />\n\n        {box.map((face, index) => {\n          return (\n            <div\n              key={index}\n              className=\"bounding-box\"\n              style={{\n                top: face.top_row,\n                right: face.right_col,\n                bottom: face.bottom_row,\n                left: face.left_col,\n              }}\n            ></div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default FaceRecognition;\n","export default __webpack_public_path__ + \"static/media/close.486d740d.svg\";","const ServerApi = \"https://intel-smart-face.herokuapp.com\";\n\nexport default ServerApi;\n","import React, { Component } from \"react\";\nimport \"./Signin.css\";\nimport \"./Responsive.css\";\nimport closeBtn from \"../../Assets/close.svg\";\nimport ServerApi from \"../../Services/ServerApi\";\n\nclass Signin extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      signInUser: \"\",\n      signInPwrd: \"\",\n    };\n  }\n\n  componentWillUnmount() {\n    /* Clear all timeouts before unmount */\n    let id = window.setTimeout(function () {}, 0);\n    while (id--) {\n      window.clearTimeout(id); // Will do nothing if there are no timeouts\n    }\n  }\n\n  onEmailChange = (event) => {\n    this.setState({ signInUser: event.target.value });\n  };\n\n  onPwrdChange = (event) => {\n    this.setState({ signInPwrd: event.target.value });\n  };\n\n  removeErrors = (targetId) => {\n    try {\n      const item = document.getElementsByClassName(targetId)[0];\n      item.classList.remove(\"active\");\n    } catch (error) {\n      console.warn(error);\n    }\n  };\n\n  showLoginError = () => {\n    const { signInUser, signInPwrd } = this.state;\n\n    if (signInUser !== \"\" || signInPwrd !== \"\") {\n      const credentialsError = document.getElementsByClassName(\n        \"error-box credentials\"\n      )[0];\n\n      credentialsError.classList.add(\"active\");\n\n      setTimeout(() => {\n        this.removeErrors(\"error-box credentials\");\n      }, 10000);\n    }\n  };\n\n  onSubmitSigiIn = () => {\n    fetch(`${ServerApi}/signin`, {\n      method: \"post\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        givenUser: this.state.signInUser,\n        givenPassword: this.state.signInPwrd,\n      }),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        const { isSuccessful, msg } = data;\n\n        if (isSuccessful) {\n          this.props.loadUsers(msg);\n          this.props.onRouteChange(\"home\");\n        } else {\n          this.showLoginError();\n        }\n      });\n  };\n\n  checkInputs = () => {\n    let goHome = true;\n    const { signInUser, signInPwrd } = this.state;\n\n    const userError = document.getElementsByClassName(\n      \"error-box email-user\"\n    )[0];\n    const pwrdError = document.getElementsByClassName(\"error-box password\")[0];\n\n    let id = window.setTimeout(function () {}, 0);\n    while (id--) {\n      window.clearTimeout(id); // Will do nothing if there are no timeouts\n    }\n\n    if (signInUser.trim() === \"\") {\n      userError.classList.add(\"active\");\n\n      setTimeout(() => {\n        this.removeErrors(\"error-box email-user\");\n      }, 10000);\n\n      goHome = false;\n    } else {\n      this.removeErrors(\"error-box email-user\");\n    }\n\n    if (signInPwrd.trim() === \"\") {\n      pwrdError.classList.add(\"active\");\n\n      setTimeout(() => {\n        this.removeErrors(\"error-box password\");\n      }, 10000);\n\n      goHome = false;\n    } else {\n      this.removeErrors(\"error-box password\");\n    }\n\n    goHome ? this.onSubmitSigiIn() : this.removeErrors(\"error-box credentials\");\n  };\n\n  checkReturn = (event) => {\n    if (event.key === \"Enter\") {\n      this.checkInputs();\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"signin-container\">\n        <div className=\"signin-box\">\n          <h1>Sign In</h1>\n\n          <div className=\"signin-inputs-div\">\n            <input\n              id=\"email-input\"\n              type=\"text\"\n              placeholder=\"Email / Username\"\n              onChange={this.onEmailChange}\n              onKeyDown={this.checkReturn}\n            ></input>\n            <input\n              id=\"pwrd-input\"\n              type=\"password\"\n              placeholder=\"Password\"\n              onChange={this.onPwrdChange}\n              onKeyDown={this.checkReturn}\n            ></input>\n          </div>\n\n          <div className=\"sign-in-buttons-div\">\n            <hr className=\"horizontal-line\"></hr>\n\n            <button onClick={this.checkInputs}>Sign In</button>\n            <button\n              onClick={() => {\n                this.props.onRouteChange(\"register\");\n              }}\n            >\n              Don't have an account?\n            </button>\n          </div>\n        </div>\n\n        <div className=\"errors-container\">\n          <div className=\"error-box email-user\">\n            <p>Email / Username field is empty</p>\n            <img\n              alt=\"\"\n              src={closeBtn}\n              className=\"close\"\n              onClick={() => {\n                const userError = document.getElementsByClassName(\n                  \"error-box email-user\"\n                )[0];\n                userError.classList.remove(\"active\");\n              }}\n            ></img>\n          </div>\n\n          <div className=\"error-box password\">\n            <p>Password field is empty</p>\n            <img\n              alt=\"img\"\n              src={closeBtn}\n              className=\"close\"\n              onClick={() => {\n                const pwrdError = document.getElementsByClassName(\n                  \"error-box password\"\n                )[0];\n                pwrdError.classList.remove(\"active\");\n              }}\n            ></img>\n          </div>\n\n          <div className=\"error-box credentials\">\n            <p>Wrong credentials</p>\n            <img\n              alt=\"img\"\n              src={closeBtn}\n              className=\"close\"\n              onClick={() => {\n                const credentialsError = document.getElementsByClassName(\n                  \"error-box credentials\"\n                )[0];\n                credentialsError.classList.remove(\"active\");\n              }}\n            ></img>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Signin;\n","import React, { Component } from \"react\";\nimport \"./Register.css\";\nimport \"./Responsive.css\";\nimport closeBtn from \"../../Assets/close.svg\";\nimport ServerApi from \"../../Services/ServerApi\";\nimport validator from \"validator\";\n\nclass Register extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      registerName: \"\",\n      registerUser: \"\",\n      registerEmail: \"\",\n      registerPwrd: \"\",\n      secondPwrd: \"\",\n    };\n  }\n\n  onNameChange = (event) => {\n    this.setState({ registerName: event.target.value });\n  };\n\n  onUserChange = (event) => {\n    this.setState({ registerUser: event.target.value });\n  };\n\n  onEmailChange = (event) => {\n    this.setState({ registerEmail: event.target.value });\n  };\n\n  onPwrdChange = (event) => {\n    this.setState({ registerPwrd: event.target.value });\n  };\n\n  onRepeatPwrdChange = (event) => {\n    this.setState({ secondPwrd: event.target.value });\n  };\n\n  removeErrors = (targetId) => {\n    const item = document.getElementsByClassName(targetId)[0];\n    item.classList.remove(\"active\");\n  };\n\n  showEmailError = () => {\n    this.removeErrors(\"error-box credentials\");\n\n    const emailError = document.getElementsByClassName(\n      \"error-box invalid-email\"\n    )[0];\n\n    emailError.classList.add(\"active\");\n\n    setTimeout(() => {\n      this.removeErrors(\"error-box invalid-email\");\n    }, 10000);\n  };\n\n  showRegisterError = () => {\n    this.removeErrors(\"error-box pwrds-not-match\");\n\n    const {\n      registerName,\n      registerUser,\n      registerEmail,\n      registerPwrd,\n      secondPwrd,\n    } = this.state;\n\n    if (\n      registerName !== \"\" ||\n      registerUser !== \"\" ||\n      registerEmail !== \"\" ||\n      registerPwrd !== \"\" ||\n      secondPwrd !== \"\"\n    ) {\n      const credentialsError = document.getElementsByClassName(\n        \"error-box credentials\"\n      )[0];\n\n      credentialsError.classList.add(\"active\");\n\n      setTimeout(() => {\n        this.removeErrors(\"error-box credentials\");\n      }, 10000);\n    }\n  };\n\n  onSubmitRegister = () => {\n    const {\n      registerName,\n      registerUser,\n      registerEmail,\n      registerPwrd,\n      secondPwrd,\n    } = this.state;\n\n    if (validator.isEmail(registerEmail)) {\n      this.removeErrors(\"error-box invalid-email\");\n\n      if (registerPwrd === secondPwrd) {\n        fetch(`${ServerApi}/register`, {\n          method: \"post\",\n          headers: { \"Content-Type\": \"application/json\" },\n          body: JSON.stringify({\n            givenName: registerName,\n            givenUser: registerUser,\n            givenEmail: registerEmail,\n            givenPassword: registerPwrd,\n          }),\n        })\n          .then((response) => response.json())\n          .then((data) => {\n            const { isSuccessful, user } = data;\n\n            if (isSuccessful) {\n              this.props.loadUsers(user);\n              this.props.onRouteChange(\"home\");\n            } else {\n              this.showRegisterError();\n            }\n          });\n      } else {\n        const notMatchPwrds = document.getElementsByClassName(\n          \"error-box pwrds-not-match\"\n        )[0];\n\n        notMatchPwrds.classList.add(\"active\");\n\n        setTimeout(() => {\n          this.removeErrors(\"error-box pwrds-not-match\");\n        }, 10000);\n      }\n    } else {\n      this.showEmailError();\n    }\n  };\n\n  checkInputs = () => {\n    let goHome = true;\n    const {\n      registerName,\n      registerUser,\n      registerEmail,\n      registerPwrd,\n      secondPwrd,\n    } = this.state;\n\n    const nameError = document.getElementsByClassName(\"error-box name\")[0];\n    const userError = document.getElementsByClassName(\"error-box user\")[0];\n    const emailError = document.getElementsByClassName(\"error-box email\")[0];\n    const pwrdError = document.getElementsByClassName(\"error-box password\")[0];\n    const repeatPwrdError = document.getElementsByClassName(\n      \"error-box repeat-password\"\n    )[0];\n\n    let id = window.setTimeout(function () {}, 0);\n    while (id--) {\n      window.clearTimeout(id); // Will do nothing if there are no timeouts\n    }\n\n    if (registerName.trim() === \"\") {\n      nameError.classList.add(\"active\");\n\n      setTimeout(() => {\n        this.removeErrors(\"error-box name\");\n      }, 10000);\n\n      goHome = false;\n    } else {\n      this.removeErrors(\"error-box name\");\n    }\n\n    if (registerUser.trim() === \"\") {\n      userError.classList.add(\"active\");\n\n      setTimeout(() => {\n        this.removeErrors(\"error-box user\");\n      }, 10000);\n\n      goHome = false;\n    } else {\n      this.removeErrors(\"error-box user\");\n    }\n\n    if (registerEmail.trim() === \"\") {\n      emailError.classList.add(\"active\");\n\n      setTimeout(() => {\n        this.removeErrors(\"error-box email\");\n      }, 10000);\n\n      goHome = false;\n    } else {\n      this.removeErrors(\"error-box email\");\n    }\n\n    if (registerPwrd.trim() === \"\") {\n      pwrdError.classList.add(\"active\");\n\n      setTimeout(() => {\n        this.removeErrors(\"error-box password\");\n      }, 10000);\n\n      goHome = false;\n    } else {\n      this.removeErrors(\"error-box password\");\n    }\n\n    if (secondPwrd.trim() === \"\") {\n      repeatPwrdError.classList.add(\"active\");\n\n      setTimeout(() => {\n        this.removeErrors(\"error-box repeat-password\");\n      }, 10000);\n\n      goHome = false;\n    } else {\n      this.removeErrors(\"error-box repeat-password\");\n    }\n\n    if (goHome) {\n      this.onSubmitRegister();\n    } else {\n      this.removeErrors(\"error-box credentials\");\n      this.removeErrors(\"error-box pwrds-not-match\");\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"register-container\">\n        <div className=\"register-box\">\n          <h1>Register</h1>\n\n          <div className=\"register-inputs-div\">\n            <input\n              onChange={this.onNameChange}\n              id=\"name-input\"\n              type=\"text\"\n              placeholder=\"Full name \"\n            ></input>\n            <input\n              onChange={this.onUserChange}\n              id=\"user-input\"\n              type=\"text\"\n              placeholder=\"Username\"\n            ></input>\n            <input\n              onChange={this.onEmailChange}\n              id=\"email-input\"\n              type=\"email\"\n              placeholder=\"Email\"\n            ></input>\n            <input\n              onChange={this.onPwrdChange}\n              id=\"pwrd-input\"\n              type=\"password\"\n              placeholder=\"Password\"\n            ></input>\n            <input\n              onChange={this.onRepeatPwrdChange}\n              id=\"repeat-pwrd-input\"\n              type=\"password\"\n              placeholder=\"Repeat password\"\n            ></input>\n          </div>\n\n          <div className=\"register-buttons-div\">\n            <hr className=\"horizontal-line\"></hr>\n            <button onClick={this.checkInputs}>Register</button>\n            <button\n              onClick={() => {\n                this.props.onRouteChange(\"signin\");\n              }}\n            >\n              I already have an account\n            </button>\n          </div>\n        </div>\n\n        <div className=\"errors-container\">\n          <div className=\"error-box name\">\n            <p>Full name field is empty</p>\n            <img\n              alt=\"\"\n              src={closeBtn}\n              className=\"close\"\n              onClick={() => {\n                const nameError = document.getElementsByClassName(\n                  \"error-box name\"\n                )[0];\n                nameError.classList.remove(\"active\");\n              }}\n            ></img>\n          </div>\n\n          <div className=\"error-box user\">\n            <p>Username field is empty</p>\n            <img\n              alt=\"\"\n              src={closeBtn}\n              className=\"close\"\n              onClick={() => {\n                const userError = document.getElementsByClassName(\n                  \"error-box user\"\n                )[0];\n                userError.classList.remove(\"active\");\n              }}\n            ></img>\n          </div>\n\n          <div className=\"error-box email\">\n            <p>Email field is empty</p>\n            <img\n              alt=\"\"\n              src={closeBtn}\n              className=\"close\"\n              onClick={() => {\n                const emailError = document.getElementsByClassName(\n                  \"error-box email\"\n                )[0];\n                emailError.classList.remove(\"active\");\n              }}\n            ></img>\n          </div>\n\n          <div className=\"error-box password\">\n            <p>Password field is empty</p>\n            <img\n              alt=\"\"\n              src={closeBtn}\n              className=\"close\"\n              onClick={() => {\n                const pwrdError = document.getElementsByClassName(\n                  \"error-box password\"\n                )[0];\n                pwrdError.classList.remove(\"active\");\n              }}\n            ></img>\n          </div>\n\n          <div className=\"error-box repeat-password\">\n            <p>Repeat password field is empty</p>\n            <img\n              alt=\"\"\n              src={closeBtn}\n              className=\"close\"\n              onClick={() => {\n                const repeatPwrdError = document.getElementsByClassName(\n                  \"error-box repeat-password\"\n                )[0];\n                repeatPwrdError.classList.remove(\"active\");\n              }}\n            ></img>\n          </div>\n\n          <div className=\"error-box pwrds-not-match\">\n            <p>Given passwords don't match each other</p>\n            <img\n              alt=\"\"\n              src={closeBtn}\n              className=\"close\"\n              onClick={() => {\n                const notMatchPwrd = document.getElementsByClassName(\n                  \"error-box pwrds-not-match\"\n                )[0];\n                notMatchPwrd.classList.remove(\"active\");\n              }}\n            ></img>\n          </div>\n\n          <div className=\"error-box credentials\">\n            <p>Looks like you already have an account</p>\n            <img\n              alt=\"\"\n              src={closeBtn}\n              className=\"close\"\n              onClick={() => {\n                const credentialsError = document.getElementsByClassName(\n                  \"error-box credentials\"\n                )[0];\n                credentialsError.classList.remove(\"active\");\n              }}\n            ></img>\n          </div>\n\n          <div className=\"error-box invalid-email\">\n            <p>Invalid Email</p>\n            <img\n              alt=\"\"\n              src={closeBtn}\n              className=\"close\"\n              onClick={() => {\n                const invalidEmail = document.getElementsByClassName(\n                  \"error-box invalid-email\"\n                )[0];\n                invalidEmail.classList.remove(\"active\");\n              }}\n            ></img>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Register;\n","const particlesOptions = {\n    particles: {\n        collisions: {\n            enable: true,\n        },\n        number: {\n            value: 50,\n            density: {\n                enable: true,\n                value_area: 1000,\n            },\n        },\n        shape: {\n            type: \"images\",\n            image: [\n                { src: \"path/to/first/image.svg\", height: 20, width: 20 },\n                { src: \"path/to/second/image.jpg\", height: 20, width: 20 },\n            ],\n        },\n        line_linked: {\n            shadow: {\n                enable: true,\n                color: \"#3CA9D1\",\n                blur: 5,\n            },\n        },\n    },\n};\n\nexport default particlesOptions;\n","import React, { Component } from \"react\";\n/* CSS stylesheet */\nimport \"./App.css\";\n/* React Components */\nimport Navigation from \"./Components/Navigation/Navigation\";\nimport Logo from \"./Components/Logo/Logo\";\nimport ImageLinkForm from \"./Components/ImageLinkForm/ImageLinkForm\";\nimport Rank from \"./Components/Rank/Rank\";\nimport FaceRecognition from \"./Components/FaceRecognition/FaceRecognition\";\nimport Signin from \"./Components/Signin/Signin\";\nimport Register from \"./Components/Register/Register\";\n/* Particles */\nimport Particles from \"react-particles-js\";\nimport particlesOptions from \"./Settings/particlesOptions\";\n/* Server IP */\nimport ServerApi from \"./Services/ServerApi\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      input: \"\",\n      imageUrl: \"\",\n      box: [],\n      route: \"signin\",\n      isSignedIn: false,\n\n      user: {\n        id: \"\",\n        name: \"\",\n        userName: \"\",\n        email: \"\",\n        entries: 0,\n        joined: \"\",\n      },\n    };\n\n    this.baseState = this.state;\n  }\n\n  loadUsers = (user) => {\n    const { id, name, user_name, email, entries, joined } = user[0];\n    this.setState({\n      user: {\n        id: id,\n        name: name,\n        userName: user_name,\n        email: email,\n        entries: entries,\n        joined: joined,\n      },\n    });\n  };\n\n  calculateFaceLocation = (data) => {\n    const clarifaiFace = data.outputs[0].data.regions;\n\n    const image = document.getElementById(\"input-image\");\n    const width = Number(image.width);\n    const height = Number(image.height);\n\n    const faceBoxes = clarifaiFace.map((box_obj) => {\n      let obj = box_obj.region_info.bounding_box;\n      obj.left_col = obj.left_col * width;\n      obj.top_row = obj.top_row * height;\n      obj.right_col = width - obj.right_col * width;\n      obj.bottom_row = height - obj.bottom_row * height;\n\n      return obj;\n    });\n\n    this.setState({ box: faceBoxes });\n  };\n\n  onInputChange = (event) => {\n    this.setState({ input: event.target.value });\n  };\n\n  onBtnSubmit = () => {\n    this.setState(\n      {\n        imageUrl: this.state.input,\n        box: [],\n      },\n      this.requestApi\n    );\n  };\n\n  clearState = () => {\n    this.setState(this.baseState);\n  };\n\n  requestApi = () => {\n    fetch(`${ServerApi}/image_url`, {\n      method: \"post\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        input: this.state.imageUrl,\n      }),\n    })\n      .then((response) => response.json())\n      .then((response) => {\n        if (response) {\n          fetch(`${ServerApi}/image`, {\n            method: \"put\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify({\n              id: this.state.user.id,\n            }),\n          })\n            .then((response) => response.json())\n            .then((count) => {\n              this.setState(Object.assign(this.state.user, { entries: count }));\n            })\n            .catch(console.log);\n        }\n        this.calculateFaceLocation(response);\n      });\n  };\n\n  onRouteChange = (route) => {\n    if (route === \"signin\") {\n      // this.setState({ isSignedIn: false });\n      this.setState(this.baseState);\n    } else if (route === \"home\") {\n      this.setState({ isSignedIn: true });\n    }\n    this.setState({ route });\n  };\n\n  render() {\n    const { isSignedIn, route, box, imageUrl, user } = this.state;\n    return (\n      <div className=\"App\">\n        <Particles className=\"particles\" params={particlesOptions} />\n        <Navigation\n          actualRoute={route}\n          onRouteChange={this.onRouteChange}\n          isSignedIn={isSignedIn}\n        />\n\n        {route === \"home\" ? (\n          <div className=\"homeContainer\">\n            <Logo />\n            <Rank user={user} />\n            <ImageLinkForm\n              clearState={this.clearState}\n              onInputChange={this.onInputChange}\n              onBtnSubmit={this.onBtnSubmit}\n            />\n            <FaceRecognition box={box} imageUrl={imageUrl} />\n          </div>\n        ) : route === \"signin\" ? (\n          <Signin\n            loadUsers={this.loadUsers}\n            onRouteChange={this.onRouteChange}\n          />\n        ) : (\n          <Register\n            loadUsers={this.loadUsers}\n            onRouteChange={this.onRouteChange}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"tachyons\";\nimport \"animate.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
{"version":3,"sources":["Components/Navigation/Navigation.js","Assets/facial-recognition.svg","Components/Logo/Logo.js","Components/ImageLinkForm/ImageLinkForm.js","Components/Rank/Rank.js","Components/FaceRecognition/FaceRecognition.js","Assets/close.svg","Services/ServerApi.js","Components/Signin/Signin.js","Components/Register/Register.js","Settings/particlesOptions.js","App.js","reportWebVitals.js","index.js"],"names":["Navigation","actualRoute","onRouteChange","isSignedIn","style","display","justifyContent","onClick","className","Logo","options","max","paddingTop","alt","src","BrainSVG","ImageLinkForm","this","props","clearState","type","placeholder","onChange","onInputChange","onBtnSubmit","Component","Rank","user","name","entries","FaceRecognition","box","imageUrl","document","querySelector","border","id","width","height","map","face","index","top","top_row","right","right_col","bottom","bottom_row","left","left_col","ServerApi","Signin","onEmailChange","event","setState","signInUser","target","value","onPwrdChange","signInPwrd","removeErrors","targetId","getElementsByClassName","classList","remove","error","console","warn","showLoginError","state","add","setTimeout","onSubmitSigiIn","element","lottie","loadAnimation","container","renderer","loop","autoplay","animationData","loadingAnimation","rendererSettings","clearCanvas","fetch","method","headers","body","JSON","stringify","givenUser","givenPassword","then","response","json","data","isSuccessful","msg","loadUsers","catch","alert","finally","destroy","checkInputs","goHome","userError","pwrdError","window","clearTimeout","trim","checkReturn","key","onKeyDown","closeBtn","Register","onNameChange","registerName","onUserChange","registerUser","registerEmail","registerPwrd","onRepeatPwrdChange","secondPwrd","showEmailError","showRegisterError","onSubmitRegister","validator","isEmail","log","givenName","givenEmail","nameError","emailError","repeatPwrdError","particlesOptions","particles","collisions","enable","number","density","value_area","line_linked","shadow","color","blur","App","user_name","email","joined","userName","calculateFaceLocation","outputs","isLoading","loadingState","clarifaiFace","regions","image","getElementById","Number","faceBoxes","box_obj","obj","region_info","bounding_box","input","requestApi","baseState","scrollTo","scrollHeight","count","Object","assign","route","showMessage","facesNumber","params","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.a31b0f73.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Navigation.css\";\n\nconst Navigation = ({ actualRoute, onRouteChange, isSignedIn }) => {\n  if (isSignedIn) {\n    return (\n      <nav style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\n        <p\n          onClick={() => onRouteChange(\"signin\")}\n          className=\"sign-btn f3 pa3 pointer\"\n        >\n          Sign out\n        </p>\n      </nav>\n    );\n  } else if (actualRoute === \"signin\") {\n    return (\n      <nav style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\n        <p\n          onClick={() => onRouteChange(\"signin\")}\n          className=\"disable sign-btn f3 pa3\"\n        >\n          Sign in\n        </p>\n\n        <p\n          onClick={() => onRouteChange(\"register\")}\n          className=\"enable sign-btn f3 pa3 pointer\"\n        >\n          Register\n        </p>\n      </nav>\n    );\n  } else if (actualRoute === \"register\") {\n    return (\n      <nav style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\n        <p\n          onClick={() => onRouteChange(\"signin\")}\n          className=\"enable sign-btn f3 pa3 pointer\"\n        >\n          Sign in\n        </p>\n\n        <p\n          onClick={() => onRouteChange(\"register\")}\n          className=\"disable sign-btn f3 pa3\"\n        >\n          Register\n        </p>\n      </nav>\n    );\n  }\n};\n\nexport default Navigation;\n","export default __webpack_public_path__ + \"static/media/facial-recognition.a4f0dcd5.svg\";","import React from \"react\";\nimport Tilt from \"react-tilt\";\nimport \"./Logo.css\";\nimport BrainSVG from \"../../Assets/facial-recognition.svg\";\n\nconst Logo = () => {\n  return (\n    <div className=\"logo-div ma4 mt0\">\n      <Tilt className=\"Tilt br2 shadow-2\" options={{ max: 30 }}>\n        <div className=\"Tilt-inner pa2\">\n          <img style={{ paddingTop: \"5px\" }} alt=\"logo\" src={BrainSVG} />\n        </div>\n      </Tilt>\n    </div>\n  );\n};\n\nexport default Logo;\n","import React, { Component } from \"react\";\nimport \"./ImageLinkForm.css\";\n\nclass ImageLinkForm extends Component {\n  componentWillUnmount() {\n    this.props.clearState();\n  }\n\n  render() {\n    return (\n      <div className=\"image-link-container\">\n        <p className=\"input-title f2\">\n          We will detect faces on your images. Give it a try!\n        </p>\n\n        <div className=\"link-form\">\n          <input\n            className=\"input-field f4 pa2 w-70\"\n            type=\"text\"\n            placeholder=\"Image URL\"\n            onChange={this.props.onInputChange}\n          />\n          <button\n            className=\"input-btn w-30 f4 ph3 pv2 dib pointer\"\n            onClick={this.props.onBtnSubmit}\n          >\n            Detect\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ImageLinkForm;\n","import React from \"react\";\n\nconst Rank = ({ user }) => {\n  const { name, entries } = user;\n\n  return (\n    <div>\n      <div className=\"white f3\">{`${name}, you already submited`}</div>\n      <div className=\"white f1\">{`${entries} images`}</div>\n    </div>\n  );\n};\n\nexport default Rank;\n","import React from \"react\";\nimport \"./FaceRecognition.css\";\n\nconst FaceRecognition = ({ box, imageUrl }) => {\n  if (imageUrl) {\n    document.querySelector(\"#input-image\").style.border = \"2px solid #4f14f2\";\n  }\n  return (\n    <div className=\"center\">\n      <div className=\"absolute\">\n        <img\n          id=\"input-image\"\n          className=\"image\"\n          alt=\"\"\n          src={imageUrl}\n          width=\"500px\"\n          height=\"auto\"\n        />\n\n        {box.map((face, index) => {\n          return (\n            <div\n              key={index}\n              className=\"bounding-box\"\n              style={{\n                top: face.top_row,\n                right: face.right_col,\n                bottom: face.bottom_row,\n                left: face.left_col,\n              }}\n            ></div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default FaceRecognition;\n","export default __webpack_public_path__ + \"static/media/close.486d740d.svg\";","// const ServerApi = \"https://face-recognition-server-pedro.herokuapp.com\";\nconst ServerApi = \"https://face-recognition-server-pedro.herokuapp.com\";\n\nexport default ServerApi;\n","import React, { Component } from \"react\";\nimport \"./Signin.css\";\nimport \"./Responsive.css\";\nimport closeBtn from \"../../Assets/close.svg\";\nimport ServerApi from \"../../Services/ServerApi\";\nimport loadingAnimation from \"../../Assets/animations/loading-login.json\";\n\nclass Signin extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      signInUser: \"\",\n      signInPwrd: \"\",\n    };\n  }\n\n  componentWillUnmount() {\n    /* Clear all timeouts before unmount */\n    let id = window.setTimeout(function () {}, 0);\n    while (id--) {\n      window.clearTimeout(id); // Will do nothing if there are no timeouts\n    }\n  }\n\n  onEmailChange = (event) => {\n    this.setState({ signInUser: event.target.value });\n  };\n\n  onPwrdChange = (event) => {\n    this.setState({ signInPwrd: event.target.value });\n  };\n\n  removeErrors = (targetId) => {\n    try {\n      const item = document.getElementsByClassName(targetId)[0];\n      item.classList.remove(\"active\");\n    } catch (error) {\n      console.warn(error);\n    }\n  };\n\n  showLoginError = () => {\n    const { signInUser, signInPwrd } = this.state;\n\n    if (signInUser !== \"\" || signInPwrd !== \"\") {\n      const credentialsError = document.getElementsByClassName(\n        \"error-box credentials\"\n      )[0];\n\n      credentialsError.classList.add(\"active\");\n\n      setTimeout(() => {\n        this.removeErrors(\"error-box credentials\");\n      }, 10000);\n    }\n  };\n\n  onSubmitSigiIn = () => {\n    const element = document.querySelector(\"#loading-circle-animation\");\n\n    this.props.lottie.loadAnimation({\n      container: element, // the dom element that will contain the animation\n      renderer: \"svg\",\n      loop: true,\n      autoplay: true,\n      animationData: loadingAnimation,\n      rendererSettings: {\n        clearCanvas: false,\n      },\n    });\n\n    fetch(`${ServerApi}/signin`, {\n      method: \"post\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        givenUser: this.state.signInUser,\n        givenPassword: this.state.signInPwrd,\n      }),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        const { isSuccessful, msg } = data;\n\n        if (isSuccessful) {\n          this.props.loadUsers(msg);\n          this.props.onRouteChange(\"home\");\n        } else {\n          this.showLoginError();\n        }\n      })\n      .catch((error) =>\n        alert(`Server error...\\nTry again later\\n\\nError: ${error}`)\n      )\n      .finally(() => {\n        this.props.lottie.destroy();\n      });\n  };\n\n  checkInputs = () => {\n    let goHome = true;\n    const { signInUser, signInPwrd } = this.state;\n\n    const userError = document.getElementsByClassName(\n      \"error-box email-user\"\n    )[0];\n    const pwrdError = document.getElementsByClassName(\"error-box password\")[0];\n\n    let id = window.setTimeout(function () {}, 0);\n    while (id--) {\n      window.clearTimeout(id); // Will do nothing if there are no timeouts\n    }\n\n    if (signInUser.trim() === \"\") {\n      userError.classList.add(\"active\");\n\n      setTimeout(() => {\n        this.removeErrors(\"error-box email-user\");\n      }, 10000);\n\n      goHome = false;\n    } else {\n      this.removeErrors(\"error-box email-user\");\n    }\n\n    if (signInPwrd.trim() === \"\") {\n      pwrdError.classList.add(\"active\");\n\n      setTimeout(() => {\n        this.removeErrors(\"error-box password\");\n      }, 10000);\n\n      goHome = false;\n    } else {\n      this.removeErrors(\"error-box password\");\n    }\n\n    goHome ? this.onSubmitSigiIn() : this.removeErrors(\"error-box credentials\");\n  };\n\n  checkReturn = (event) => {\n    if (event.key === \"Enter\") {\n      this.checkInputs();\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"signin-container\">\n        <div className=\"signin-box\">\n          <h1>Sign In</h1>\n\n          <div className=\"signin-inputs-div\">\n            <input\n              id=\"email-input\"\n              type=\"text\"\n              placeholder=\"Email / Username\"\n              onChange={this.onEmailChange}\n              onKeyDown={this.checkReturn}\n            ></input>\n            <input\n              id=\"pwrd-input\"\n              type=\"password\"\n              placeholder=\"Password\"\n              onChange={this.onPwrdChange}\n              onKeyDown={this.checkReturn}\n            ></input>\n          </div>\n\n          <div className=\"sign-in-buttons-div\">\n            <hr className=\"horizontal-line\"></hr>\n\n            <button onClick={this.checkInputs}>Sign In</button>\n            <button\n              onClick={() => {\n                this.props.onRouteChange(\"register\");\n              }}\n            >\n              Don't have an account?\n            </button>\n          </div>\n        </div>\n        <div id=\"loading-circle-animation\"></div>\n\n        <div className=\"errors-container\">\n          <div className=\"error-box email-user\">\n            <p>Email / Username field is empty</p>\n            <img\n              alt=\"\"\n              src={closeBtn}\n              className=\"close\"\n              onClick={() => {\n                const userError = document.getElementsByClassName(\n                  \"error-box email-user\"\n                )[0];\n                userError.classList.remove(\"active\");\n              }}\n            ></img>\n          </div>\n\n          <div className=\"error-box password\">\n            <p>Password field is empty</p>\n            <img\n              alt=\"img\"\n              src={closeBtn}\n              className=\"close\"\n              onClick={() => {\n                const pwrdError =\n                  document.getElementsByClassName(\"error-box password\")[0];\n                pwrdError.classList.remove(\"active\");\n              }}\n            ></img>\n          </div>\n\n          <div className=\"error-box credentials\">\n            <p>Wrong credentials</p>\n            <img\n              alt=\"img\"\n              src={closeBtn}\n              className=\"close\"\n              onClick={() => {\n                const credentialsError = document.getElementsByClassName(\n                  \"error-box credentials\"\n                )[0];\n                credentialsError.classList.remove(\"active\");\n              }}\n            ></img>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Signin;\n","import React, { Component } from \"react\";\nimport \"./Register.css\";\nimport \"./Responsive.css\";\nimport closeBtn from \"../../Assets/close.svg\";\nimport ServerApi from \"../../Services/ServerApi\";\nimport validator from \"validator\";\nimport loadingAnimation from \"../../Assets/animations/loading-login.json\";\n\nclass Register extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      registerName: \"\",\n      registerUser: \"\",\n      registerEmail: \"\",\n      registerPwrd: \"\",\n      secondPwrd: \"\",\n    };\n  }\n\n  onNameChange = (event) => {\n    this.setState({ registerName: event.target.value });\n  };\n\n  onUserChange = (event) => {\n    this.setState({ registerUser: event.target.value });\n  };\n\n  onEmailChange = (event) => {\n    this.setState({ registerEmail: event.target.value });\n  };\n\n  onPwrdChange = (event) => {\n    this.setState({ registerPwrd: event.target.value });\n  };\n\n  onRepeatPwrdChange = (event) => {\n    this.setState({ secondPwrd: event.target.value });\n  };\n\n  removeErrors = (targetId) => {\n    const item = document.getElementsByClassName(targetId)[0];\n    item.classList.remove(\"active\");\n  };\n\n  showEmailError = () => {\n    this.removeErrors(\"error-box credentials\");\n\n    const emailError = document.getElementsByClassName(\n      \"error-box invalid-email\"\n    )[0];\n\n    emailError.classList.add(\"active\");\n\n    setTimeout(() => {\n      this.removeErrors(\"error-box invalid-email\");\n    }, 10000);\n  };\n\n  showRegisterError = () => {\n    this.removeErrors(\"error-box pwrds-not-match\");\n\n    const {\n      registerName,\n      registerUser,\n      registerEmail,\n      registerPwrd,\n      secondPwrd,\n    } = this.state;\n\n    if (\n      registerName !== \"\" ||\n      registerUser !== \"\" ||\n      registerEmail !== \"\" ||\n      registerPwrd !== \"\" ||\n      secondPwrd !== \"\"\n    ) {\n      const credentialsError = document.getElementsByClassName(\n        \"error-box credentials\"\n      )[0];\n\n      credentialsError.classList.add(\"active\");\n\n      setTimeout(() => {\n        this.removeErrors(\"error-box credentials\");\n      }, 10000);\n    }\n  };\n\n  onSubmitRegister = () => {\n    const {\n      registerName,\n      registerUser,\n      registerEmail,\n      registerPwrd,\n      secondPwrd,\n    } = this.state;\n\n    if (validator.isEmail(registerEmail)) {\n      this.removeErrors(\"error-box invalid-email\");\n\n      if (registerPwrd === secondPwrd) {\n        const element = document.querySelector(\"#loading-circle-animation\");\n\n        console.log(\"Register Lottie loaded\");\n        this.props.lottie.loadAnimation({\n          container: element, // the dom element that will contain the animation\n          renderer: \"svg\",\n          loop: true,\n          autoplay: true,\n          animationData: loadingAnimation,\n        });\n\n        fetch(`${ServerApi}/register`, {\n          method: \"post\",\n          headers: { \"Content-Type\": \"application/json\" },\n          body: JSON.stringify({\n            givenName: registerName,\n            givenUser: registerUser,\n            givenEmail: registerEmail,\n            givenPassword: registerPwrd,\n          }),\n        })\n          .then((response) => response.json())\n          .then((data) => {\n            const { isSuccessful, user } = data;\n\n            if (isSuccessful) {\n              this.props.loadUsers(user);\n              this.props.onRouteChange(\"home\");\n            } else {\n              this.showRegisterError();\n            }\n          })\n          .catch((error) =>\n            alert(`Server error...\\nTry again later\\n\\nError: ${error}`)\n          )\n          .finally(() => {\n            this.props.lottie.destroy();\n          });\n      } else {\n        const notMatchPwrds = document.getElementsByClassName(\n          \"error-box pwrds-not-match\"\n        )[0];\n\n        notMatchPwrds.classList.add(\"active\");\n\n        setTimeout(() => {\n          this.removeErrors(\"error-box pwrds-not-match\");\n        }, 10000);\n      }\n    } else {\n      this.showEmailError();\n    }\n  };\n\n  checkInputs = () => {\n    let goHome = true;\n    const {\n      registerName,\n      registerUser,\n      registerEmail,\n      registerPwrd,\n      secondPwrd,\n    } = this.state;\n\n    const nameError = document.getElementsByClassName(\"error-box name\")[0];\n    const userError = document.getElementsByClassName(\"error-box user\")[0];\n    const emailError = document.getElementsByClassName(\"error-box email\")[0];\n    const pwrdError = document.getElementsByClassName(\"error-box password\")[0];\n    const repeatPwrdError = document.getElementsByClassName(\n      \"error-box repeat-password\"\n    )[0];\n\n    let id = window.setTimeout(function () {}, 0);\n    while (id--) {\n      window.clearTimeout(id); // Will do nothing if there are no timeouts\n    }\n\n    if (registerName.trim() === \"\") {\n      nameError.classList.add(\"active\");\n\n      setTimeout(() => {\n        this.removeErrors(\"error-box name\");\n      }, 10000);\n\n      goHome = false;\n    } else {\n      this.removeErrors(\"error-box name\");\n    }\n\n    if (registerUser.trim() === \"\") {\n      userError.classList.add(\"active\");\n\n      setTimeout(() => {\n        this.removeErrors(\"error-box user\");\n      }, 10000);\n\n      goHome = false;\n    } else {\n      this.removeErrors(\"error-box user\");\n    }\n\n    if (registerEmail.trim() === \"\") {\n      emailError.classList.add(\"active\");\n\n      setTimeout(() => {\n        this.removeErrors(\"error-box email\");\n      }, 10000);\n\n      goHome = false;\n    } else {\n      this.removeErrors(\"error-box email\");\n    }\n\n    if (registerPwrd.trim() === \"\") {\n      pwrdError.classList.add(\"active\");\n\n      setTimeout(() => {\n        this.removeErrors(\"error-box password\");\n      }, 10000);\n\n      goHome = false;\n    } else {\n      this.removeErrors(\"error-box password\");\n    }\n\n    if (secondPwrd.trim() === \"\") {\n      repeatPwrdError.classList.add(\"active\");\n\n      setTimeout(() => {\n        this.removeErrors(\"error-box repeat-password\");\n      }, 10000);\n\n      goHome = false;\n    } else {\n      this.removeErrors(\"error-box repeat-password\");\n    }\n\n    if (goHome) {\n      this.onSubmitRegister();\n    } else {\n      this.removeErrors(\"error-box credentials\");\n      this.removeErrors(\"error-box pwrds-not-match\");\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"register-container\">\n        <div className=\"register-box\">\n          <h1>Register</h1>\n\n          <div className=\"register-inputs-div\">\n            <input\n              onChange={this.onNameChange}\n              id=\"name-input\"\n              type=\"text\"\n              placeholder=\"Full name \"\n            ></input>\n            <input\n              onChange={this.onUserChange}\n              id=\"user-input\"\n              type=\"text\"\n              placeholder=\"Username\"\n            ></input>\n            <input\n              onChange={this.onEmailChange}\n              id=\"email-input\"\n              type=\"email\"\n              placeholder=\"Email\"\n            ></input>\n            <input\n              onChange={this.onPwrdChange}\n              id=\"pwrd-input\"\n              type=\"password\"\n              placeholder=\"Password\"\n            ></input>\n            <input\n              onChange={this.onRepeatPwrdChange}\n              id=\"repeat-pwrd-input\"\n              type=\"password\"\n              placeholder=\"Repeat password\"\n            ></input>\n          </div>\n\n          <div className=\"register-buttons-div\">\n            <hr className=\"horizontal-line\"></hr>\n            <button onClick={this.checkInputs}>Register</button>\n            <button\n              onClick={() => {\n                this.props.onRouteChange(\"signin\");\n              }}\n            >\n              I already have an account\n            </button>\n          </div>\n        </div>\n        <div id=\"loading-circle-animation\"></div>\n\n        <div className=\"errors-container\">\n          <div className=\"error-box name\">\n            <p>Full name field is empty</p>\n            <img\n              alt=\"\"\n              src={closeBtn}\n              className=\"close\"\n              onClick={() => {\n                const nameError =\n                  document.getElementsByClassName(\"error-box name\")[0];\n                nameError.classList.remove(\"active\");\n              }}\n            ></img>\n          </div>\n\n          <div className=\"error-box user\">\n            <p>Username field is empty</p>\n            <img\n              alt=\"\"\n              src={closeBtn}\n              className=\"close\"\n              onClick={() => {\n                const userError =\n                  document.getElementsByClassName(\"error-box user\")[0];\n                userError.classList.remove(\"active\");\n              }}\n            ></img>\n          </div>\n\n          <div className=\"error-box email\">\n            <p>Email field is empty</p>\n            <img\n              alt=\"\"\n              src={closeBtn}\n              className=\"close\"\n              onClick={() => {\n                const emailError =\n                  document.getElementsByClassName(\"error-box email\")[0];\n                emailError.classList.remove(\"active\");\n              }}\n            ></img>\n          </div>\n\n          <div className=\"error-box password\">\n            <p>Password field is empty</p>\n            <img\n              alt=\"\"\n              src={closeBtn}\n              className=\"close\"\n              onClick={() => {\n                const pwrdError =\n                  document.getElementsByClassName(\"error-box password\")[0];\n                pwrdError.classList.remove(\"active\");\n              }}\n            ></img>\n          </div>\n\n          <div className=\"error-box repeat-password\">\n            <p>Repeat password field is empty</p>\n            <img\n              alt=\"\"\n              src={closeBtn}\n              className=\"close\"\n              onClick={() => {\n                const repeatPwrdError = document.getElementsByClassName(\n                  \"error-box repeat-password\"\n                )[0];\n                repeatPwrdError.classList.remove(\"active\");\n              }}\n            ></img>\n          </div>\n\n          <div className=\"error-box pwrds-not-match\">\n            <p>Given passwords don't match each other</p>\n            <img\n              alt=\"\"\n              src={closeBtn}\n              className=\"close\"\n              onClick={() => {\n                const notMatchPwrd = document.getElementsByClassName(\n                  \"error-box pwrds-not-match\"\n                )[0];\n                notMatchPwrd.classList.remove(\"active\");\n              }}\n            ></img>\n          </div>\n\n          <div className=\"error-box credentials\">\n            <p>Looks like you already have an account</p>\n            <img\n              alt=\"\"\n              src={closeBtn}\n              className=\"close\"\n              onClick={() => {\n                const credentialsError = document.getElementsByClassName(\n                  \"error-box credentials\"\n                )[0];\n                credentialsError.classList.remove(\"active\");\n              }}\n            ></img>\n          </div>\n\n          <div className=\"error-box invalid-email\">\n            <p>Invalid Email</p>\n            <img\n              alt=\"\"\n              src={closeBtn}\n              className=\"close\"\n              onClick={() => {\n                const invalidEmail = document.getElementsByClassName(\n                  \"error-box invalid-email\"\n                )[0];\n                invalidEmail.classList.remove(\"active\");\n              }}\n            ></img>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Register;\n","const particlesOptions = {\n  particles: {\n    collisions: {\n      enable: true,\n    },\n    number: {\n      value: 50,\n      density: {\n        enable: true,\n        value_area: 1000,\n      },\n    },\n    line_linked: {\n      shadow: {\n        enable: true,\n        color: \"#3CA9D1\",\n        blur: 5,\n      },\n    },\n  },\n};\n\nexport default particlesOptions;\n","import React, { Component } from \"react\";\n/* CSS stylesheet */\nimport \"./App.css\";\n/* React Components */\nimport Navigation from \"./Components/Navigation/Navigation\";\nimport Logo from \"./Components/Logo/Logo\";\nimport ImageLinkForm from \"./Components/ImageLinkForm/ImageLinkForm\";\nimport Rank from \"./Components/Rank/Rank\";\nimport FaceRecognition from \"./Components/FaceRecognition/FaceRecognition\";\nimport Signin from \"./Components/Signin/Signin\";\nimport Register from \"./Components/Register/Register\";\n/* Particles */\nimport Particles from \"react-particles-js\";\nimport particlesOptions from \"./Settings/particlesOptions\";\n/* Server IP */\nimport ServerApi from \"./Services/ServerApi\";\nimport lottie from \"lottie-web\";\nimport loadingAnimation from \"./Assets/animations/loading_api.json\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      input: \"\",\n      imageUrl: \"\",\n      box: [],\n      route: \"signin\",\n      isSignedIn: false,\n      isLoading: false,\n      loadingState: \"\",\n\n      user: {\n        id: \"\",\n        name: \"\",\n        userName: \"\",\n        email: \"\",\n        entries: 0,\n        joined: \"\",\n      },\n    };\n\n    this.baseState = this.state;\n  }\n\n  componentDidUpdate() {\n    const element = document.querySelector(\"#link-loading-animation\");\n\n    lottie.loadAnimation({\n      container: element, // the dom element that will contain the animation\n      renderer: \"svg\",\n      loop: true,\n      autoplay: true,\n      animationData: loadingAnimation,\n      rendererSettings: {\n        clearCanvas: false,\n        id: \"loading-animation-id\",\n      },\n    });\n  }\n\n  loadUsers = (user) => {\n    const { id, name, user_name, email, entries, joined } = user[0];\n    this.setState({\n      user: {\n        id: id,\n        name: name,\n        userName: user_name,\n        email: email,\n        entries: entries,\n        joined: joined,\n      },\n    });\n  };\n\n  calculateFaceLocation = (data) => {\n    if (!data.outputs) {\n      this.setState({ isLoading: false, loadingState: \"\" });\n\n      return alert(\n        \"Something went wrong ...\\nCheck if the URL is a valid image\"\n      );\n    }\n\n    const clarifaiFace = data?.outputs[0]?.data.regions;\n\n    const image = document.getElementById(\"input-image\");\n    const width = Number(image.width);\n    const height = Number(image.height);\n\n    const faceBoxes = clarifaiFace.map((box_obj) => {\n      let obj = box_obj.region_info.bounding_box;\n      obj.left_col = obj.left_col * width;\n      obj.top_row = obj.top_row * height;\n      obj.right_col = width - obj.right_col * width;\n      obj.bottom_row = height - obj.bottom_row * height;\n\n      return obj;\n    });\n\n    this.setState({ box: faceBoxes, isLoading: false, loadingState: \"\" });\n  };\n\n  onInputChange = (event) => {\n    this.setState({ input: event.target.value });\n  };\n\n  onBtnSubmit = () => {\n    this.setState(\n      {\n        imageUrl: this.state.input,\n        box: [],\n        isLoading: true,\n        loadingState: \"Requesting data from API ...\",\n      },\n      this.requestApi\n    );\n  };\n\n  clearState = () => {\n    this.setState(this.baseState);\n  };\n\n  requestApi = () => {\n    window.scrollTo(0, document.body.scrollHeight);\n\n    fetch(`${ServerApi}/image_url`, {\n      method: \"post\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        input: this.state.imageUrl,\n      }),\n    })\n      .then((response) => response.json())\n      .then((response) => {\n        if (response) {\n          fetch(`${ServerApi}/image`, {\n            method: \"put\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify({\n              id: this.state.user.id,\n            }),\n          })\n            .then((response) => response.json())\n            .then((count) => {\n              this.setState(Object.assign(this.state.user, { entries: count }));\n            })\n            .catch(console.log);\n        }\n        this.calculateFaceLocation(response);\n      })\n      .catch(console.error);\n  };\n\n  onRouteChange = (route) => {\n    if (route === \"signin\") {\n      this.setState(this.baseState);\n    } else if (route === \"home\") {\n      this.setState({ isSignedIn: true });\n    }\n    this.setState({ route });\n  };\n\n  showMessage = (facesNumber) => {\n    window.scrollTo(0, document.body.scrollHeight);\n\n    return <h1 className=\"info-message\">Detected {facesNumber} faces</h1>;\n  };\n\n  render() {\n    const { isSignedIn, route, box, imageUrl, user, isLoading, loadingState } =\n      this.state;\n    return (\n      <div className=\"App\">\n        <Particles className=\"particles\" params={particlesOptions} />\n        <Navigation\n          actualRoute={route}\n          onRouteChange={this.onRouteChange}\n          isSignedIn={isSignedIn}\n        />\n\n        {route === \"home\" ? (\n          <div className=\"homeContainer\">\n            <Logo />\n            <Rank user={user} />\n            <ImageLinkForm\n              clearState={this.clearState}\n              onInputChange={this.onInputChange}\n              onBtnSubmit={this.onBtnSubmit}\n            />\n            {isLoading ? (\n              <div className=\"loading-message\">\n                <div id=\"link-loading-animation\"></div>\n                <h1 className=\"info-message\">{loadingState}</h1>\n              </div>\n            ) : null}\n            {box.length ? this.showMessage(box.length) : null}\n            <FaceRecognition box={box} imageUrl={imageUrl} />\n          </div>\n        ) : route === \"signin\" ? (\n          <Signin\n            lottie={lottie}\n            loadUsers={this.loadUsers}\n            onRouteChange={this.onRouteChange}\n          />\n        ) : (\n          <Register\n            lottie={lottie}\n            loadUsers={this.loadUsers}\n            onRouteChange={this.onRouteChange}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"tachyons\";\nimport \"animate.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
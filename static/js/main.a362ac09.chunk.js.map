{"version":3,"sources":["Components/Profile/ProfileIcon.js","Components/Navigation/Navigation.js","Assets/facial-recognition.svg","Components/Logo/Logo.js","Components/ImageLinkForm/ImageLinkForm.js","Components/Rank/Rank.js","Components/FaceRecognition/FaceRecognition.js","Assets/close.svg","Services/ServerApi.js","Components/Signin/Signin.js","Components/Register/Register.js","Components/Modal/Modal.js","Components/Profile/Profile.js","Components/DisableParticles/DisableParticles.js","Settings/particlesOptions.js","App.js","reportWebVitals.js","index.js"],"names":["ProfileIcon","onRouteChange","toggleModal","user","useState","dropdownOpen","setDropdownOpen","className","isOpen","toggle","data-toggle","aria-expanded","tag","src","avatar_url","trim","id","alt","style","marginTop","backgroundColor","animationDuration","onClick","window","sessionStorage","removeItem","Navigation","actualRoute","isSignedIn","display","justifyContent","Logo","options","max","paddingTop","BrainSVG","ImageLinkForm","this","props","clearState","type","placeholder","onChange","onInputChange","onBtnSubmit","Component","Rank","name","entries","message","setMessage","useEffect","a","fetch","res","json","data","FaceRecognition","box","imageUrl","document","querySelector","border","width","height","map","face","index","top","top_row","right","right_col","bottom","bottom_row","left","left_col","ServerApi","Signin","onEmailChange","event","setState","signInUser","target","value","onPwrdChange","signInPwrd","removeErrors","targetId","getElementsByClassName","classList","remove","error","console","warn","showLoginError","state","add","setTimeout","saveAuthTokenInSession","token","setItem","onSubmitSigiIn","element","lottie","loadAnimation","container","renderer","loop","autoplay","animationData","loadingAnimation","rendererSettings","clearCanvas","method","headers","body","JSON","stringify","givenUser","givenPassword","then","response","success","userId","getUserProfile","loadUsers","catch","log","alert","finally","destroy","checkInputs","goHome","userError","pwrdError","clearTimeout","checkReturn","key","onKeyDown","closeBtn","Register","onNameChange","registerName","onUserChange","registerUser","registerEmail","registerPwrd","onRepeatPwrdChange","secondPwrd","showEmailError","showRegisterError","onSubmitRegister","validator","isEmail","givenName","givenEmail","nameError","emailError","repeatPwrdError","modalRoot","getElementById","Modal","children","createElement","appendChild","removeChild","ReactDOM","createPortal","Profile","updateUserFields","setUserFields","userFields","email","birthday","Date","joined","toLocaleDateString","defaultValue","toISOString","split","confirm","Authorization","getItem","user_id","formInput","code","msg","disableParticles","particlesOptions","particles","collisions","enable","number","App","user_name","userName","calculateFaceLocation","outputs","isLoading","loadingState","clarifaiFace","regions","image","Number","faceBoxes","box_obj","obj","region_info","bounding_box","input","requestApi","baseState","scrollTo","scrollHeight","status","Error","count","Object","assign","route","showMessage","facesNumber","prevState","isProfileOpen","Promise","resolve","reject","params","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","render","StrictMode"],"mappings":"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","file":"static/js/main.a362ac09.chunk.js","sourcesContent":["import { useEffect, useState } from \"react\";\nimport {\n  Dropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n} from \"reactstrap\";\nimport \"./ProfileIcon.css\";\n\nconst ProfileIcon = ({ onRouteChange, toggleModal, user }) => {\n  const [dropdownOpen, setDropdownOpen] = useState(false);\n\n  return (\n    <div className=\"icon-container\">\n      <div className=\"d-flex justify-content-center\">\n        <Dropdown\n          isOpen={dropdownOpen}\n          toggle={() => setDropdownOpen(!dropdownOpen)}\n        >\n          <DropdownToggle\n            data-toggle=\"dropdown\"\n            aria-expanded={dropdownOpen}\n            tag=\"span\"\n          >\n            <img\n              src={user.avatar_url?.trim() || `https://robohash.org/${user.id}`}\n              className=\"navigation-profile-img\"\n              alt=\"avatar\"\n            />\n          </DropdownToggle>\n          <DropdownMenu\n            className=\"animate__animated animate__zoomIn\"\n            style={{\n              marginTop: \"30px\",\n              backgroundColor: \"rgba(255, 255, 255, 0.5)\",\n              animationDuration: \"0.20s\",\n            }}\n          >\n            <DropdownItem onClick={() => toggleModal()}>\n              View profile\n            </DropdownItem>\n            <DropdownItem\n              onClick={() => {\n                window.sessionStorage.removeItem(\"token\");\n                onRouteChange(\"signin\");\n              }}\n            >\n              Sign out\n            </DropdownItem>\n          </DropdownMenu>\n        </Dropdown>\n      </div>\n    </div>\n  );\n};\n\nexport default ProfileIcon;\n","import React from \"react\";\nimport ProfileIcon from \"../Profile/ProfileIcon\";\nimport \"./Navigation.css\";\n\nconst Navigation = ({\n  actualRoute,\n  onRouteChange,\n  isSignedIn,\n  toggleModal,\n  user,\n}) => {\n  if (isSignedIn) {\n    return (\n      <nav style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\n        <ProfileIcon\n          user={user}\n          onRouteChange={onRouteChange}\n          toggleModal={toggleModal}\n          className=\"f3 pa3 pointer\"\n        />\n      </nav>\n    );\n  }\n\n  return (\n    <nav style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\n      <p\n        onClick={() => onRouteChange(\"signin\")}\n        className={`${\n          actualRoute === \"signin\" ? \"disable\" : \"enable\"\n        } sign-btn f3 pa3`}\n      >\n        Sign in\n      </p>\n\n      <p\n        onClick={() => onRouteChange(\"register\")}\n        className={`${\n          actualRoute === \"signin\" ? \"enable\" : \"disable\"\n        } sign-btn f3 pa3 pointer`}\n      >\n        Register\n      </p>\n    </nav>\n  );\n};\n\nexport default Navigation;\n","export default __webpack_public_path__ + \"static/media/facial-recognition.a4f0dcd5.svg\";","import React from \"react\";\nimport Tilt from \"react-tilt\";\nimport \"./Logo.css\";\nimport BrainSVG from \"../../Assets/facial-recognition.svg\";\n\nconst Logo = () => {\n  return (\n    <div className=\"logo-div ma4 mt0\">\n      <Tilt className=\"Tilt br2 shadow-2\" options={{ max: 30 }}>\n        <div className=\"Tilt-inner pa2\">\n          <img style={{ paddingTop: \"5px\" }} alt=\"logo\" src={BrainSVG} />\n        </div>\n      </Tilt>\n    </div>\n  );\n};\n\nexport default Logo;\n","import React, { Component } from \"react\";\nimport \"./ImageLinkForm.css\";\n\nclass ImageLinkForm extends Component {\n  componentWillUnmount() {\n    this.props.clearState();\n  }\n\n  render() {\n    return (\n      <div className=\"image-link-container\">\n        <p className=\"input-title f2\">\n          Insert an image URL to detect all the faces in it.\n        </p>\n\n        <div className=\"link-form\">\n          <input\n            className=\"input-field f4 pa2 w-70\"\n            type=\"text\"\n            placeholder=\"Image URL\"\n            onChange={this.props.onInputChange}\n          />\n          <button\n            className=\"input-btn w-30 f4 ph3 pv2 dib pointer\"\n            onClick={this.props.onBtnSubmit}\n          >\n            Detect\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ImageLinkForm;\n","import React from \"react\";\nimport { useState, useEffect } from \"react\";\n\nconst Rank = ({ user }) => {\n  const { name, entries } = user;\n  const [message, setMessage] = useState(\"\");\n\n  useEffect(async () => {\n    const res = await fetch(\n      `https://g4mji9tz13.execute-api.us-east-1.amazonaws.com/rank?rank=${entries}`\n    );\n\n    const data = await res.json();\n\n    setMessage(data.message);\n  });\n\n  return (\n    <div>\n      <div className=\"white f3\">{`${name},`}</div>\n      <div className=\"white f1\">{`${message}`}</div>\n    </div>\n  );\n};\n\nexport default Rank;\n","import React from \"react\";\nimport \"./FaceRecognition.css\";\n\nconst FaceRecognition = ({ box, imageUrl }) => {\n  if (imageUrl) {\n    document.querySelector(\"#input-image\").style.border = \"2px solid #4f14f2\";\n  }\n  return (\n    <div className=\"center\">\n      <div className=\"absolute\">\n        <img\n          id=\"input-image\"\n          className=\"image\"\n          alt=\"\"\n          src={imageUrl}\n          width=\"500px\"\n          height=\"auto\"\n        />\n\n        {box.map((face, index) => {\n          return (\n            <div\n              key={index}\n              className=\"bounding-box\"\n              style={{\n                top: face.top_row,\n                right: face.right_col,\n                bottom: face.bottom_row,\n                left: face.left_col,\n              }}\n            ></div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default FaceRecognition;\n","export default __webpack_public_path__ + \"static/media/close.486d740d.svg\";","// const ServerApi = \"http://127.0.0.1:4000/api\";\nconst ServerApi = \"https://face-recognition-server-pedro.herokuapp.com/api\";\n\nexport default ServerApi;\n","import React, { Component } from \"react\";\nimport \"./Signin.css\";\nimport \"./Responsive.css\";\nimport closeBtn from \"../../Assets/close.svg\";\nimport ServerApi from \"../../Services/ServerApi\";\nimport loadingAnimation from \"../../Assets/animations/loading-login.json\";\n\nclass Signin extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      signInUser: \"\",\n      signInPwrd: \"\",\n    };\n  }\n\n  componentWillUnmount() {\n    /* Clear all timeouts before unmount */\n    let id = window.setTimeout(function () {}, 0);\n    while (id--) {\n      window.clearTimeout(id); // Will do nothing if there are no timeouts\n    }\n  }\n\n  onEmailChange = (event) => {\n    this.setState({ signInUser: event.target.value });\n  };\n\n  onPwrdChange = (event) => {\n    this.setState({ signInPwrd: event.target.value });\n  };\n\n  removeErrors = (targetId) => {\n    try {\n      const item = document.getElementsByClassName(targetId)[0];\n      item.classList.remove(\"active\");\n    } catch (error) {\n      console.warn(error);\n    }\n  };\n\n  showLoginError = () => {\n    const { signInUser, signInPwrd } = this.state;\n\n    if (signInUser !== \"\" || signInPwrd !== \"\") {\n      const credentialsError = document.getElementsByClassName(\n        \"error-box credentials\"\n      )[0];\n\n      credentialsError.classList.add(\"active\");\n\n      setTimeout(() => {\n        this.removeErrors(\"error-box credentials\");\n      }, 10000);\n    }\n  };\n\n  saveAuthTokenInSession = (token) => {\n    return window.sessionStorage.setItem(\"token\", token);\n  };\n\n  onSubmitSigiIn = () => {\n    const element = document.querySelector(\"#loading-circle-animation\");\n\n    this.props.lottie.loadAnimation({\n      container: element, // the dom element that will contain the animation\n      renderer: \"svg\",\n      loop: true,\n      autoplay: true,\n      animationData: loadingAnimation,\n      rendererSettings: {\n        clearCanvas: false,\n      },\n    });\n\n    fetch(`${ServerApi}/signin`, {\n      method: \"post\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        givenUser: this.state.signInUser,\n        givenPassword: this.state.signInPwrd,\n      }),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        const { success, userId, token } = data;\n\n        if (success) {\n          this.saveAuthTokenInSession(token);\n          this.props\n            .getUserProfile(userId, token)\n            .then((user) => {\n              if (user.id) {\n                this.props.loadUsers(user);\n                this.props.onRouteChange(\"home\");\n              }\n            })\n            .catch((error) => console.log(error));\n        } else {\n          this.showLoginError();\n        }\n      })\n      .catch((error) => {\n        console.warn(error);\n        alert(`Unexpected error...\\nPlease, try again later`);\n      })\n      .finally(() => {\n        this.props.lottie.destroy();\n      });\n  };\n\n  checkInputs = () => {\n    let goHome = true;\n    const { signInUser, signInPwrd } = this.state;\n\n    const userError = document.getElementsByClassName(\n      \"error-box email-user\"\n    )[0];\n    const pwrdError = document.getElementsByClassName(\"error-box password\")[0];\n\n    let id = window.setTimeout(function () {}, 0);\n    while (id--) {\n      window.clearTimeout(id); // Will do nothing if there are no timeouts\n    }\n\n    if (signInUser.trim() === \"\") {\n      userError.classList.add(\"active\");\n\n      setTimeout(() => {\n        this.removeErrors(\"error-box email-user\");\n      }, 10000);\n\n      goHome = false;\n    } else {\n      this.removeErrors(\"error-box email-user\");\n    }\n\n    if (signInPwrd.trim() === \"\") {\n      pwrdError.classList.add(\"active\");\n\n      setTimeout(() => {\n        this.removeErrors(\"error-box password\");\n      }, 10000);\n\n      goHome = false;\n    } else {\n      this.removeErrors(\"error-box password\");\n    }\n\n    goHome ? this.onSubmitSigiIn() : this.removeErrors(\"error-box credentials\");\n  };\n\n  checkReturn = (event) => {\n    if (event.key === \"Enter\") {\n      this.checkInputs();\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"signin-container\">\n        <div className=\"signin-box\">\n          <h1>Sign In</h1>\n\n          <div className=\"signin-inputs-div\">\n            <input\n              id=\"email-input\"\n              type=\"text\"\n              placeholder=\"Email / Username\"\n              onChange={this.onEmailChange}\n              onKeyDown={this.checkReturn}\n            ></input>\n            <input\n              id=\"pwrd-input\"\n              type=\"password\"\n              placeholder=\"Password\"\n              onChange={this.onPwrdChange}\n              onKeyDown={this.checkReturn}\n            ></input>\n          </div>\n\n          <div className=\"sign-in-buttons-div\">\n            <hr className=\"horizontal-line\"></hr>\n\n            <button onClick={this.checkInputs}>Sign In</button>\n            <button\n              onClick={() => {\n                this.props.onRouteChange(\"register\");\n              }}\n            >\n              Don't have an account?\n            </button>\n          </div>\n        </div>\n        <div id=\"loading-circle-animation\"></div>\n\n        <div className=\"errors-container\">\n          <div className=\"error-box email-user\">\n            <p>Email / Username field is empty</p>\n            <img\n              alt=\"\"\n              src={closeBtn}\n              className=\"close\"\n              onClick={() => {\n                const userError = document.getElementsByClassName(\n                  \"error-box email-user\"\n                )[0];\n                userError.classList.remove(\"active\");\n              }}\n            ></img>\n          </div>\n\n          <div className=\"error-box password\">\n            <p>Password field is empty</p>\n            <img\n              alt=\"img\"\n              src={closeBtn}\n              className=\"close\"\n              onClick={() => {\n                const pwrdError =\n                  document.getElementsByClassName(\"error-box password\")[0];\n                pwrdError.classList.remove(\"active\");\n              }}\n            ></img>\n          </div>\n\n          <div className=\"error-box credentials\">\n            <p>Wrong credentials</p>\n            <img\n              alt=\"img\"\n              src={closeBtn}\n              className=\"close\"\n              onClick={() => {\n                const credentialsError = document.getElementsByClassName(\n                  \"error-box credentials\"\n                )[0];\n                credentialsError.classList.remove(\"active\");\n              }}\n            ></img>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Signin;\n","import React, { Component } from \"react\";\nimport \"./Register.css\";\nimport \"./Responsive.css\";\nimport closeBtn from \"../../Assets/close.svg\";\nimport ServerApi from \"../../Services/ServerApi\";\nimport validator from \"validator\";\nimport loadingAnimation from \"../../Assets/animations/loading-login.json\";\n\nclass Register extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      registerName: \"\",\n      registerUser: \"\",\n      registerEmail: \"\",\n      registerPwrd: \"\",\n      secondPwrd: \"\",\n    };\n  }\n\n  onNameChange = (event) => {\n    this.setState({ registerName: event.target.value });\n  };\n\n  onUserChange = (event) => {\n    this.setState({ registerUser: event.target.value });\n  };\n\n  onEmailChange = (event) => {\n    this.setState({ registerEmail: event.target.value });\n  };\n\n  onPwrdChange = (event) => {\n    this.setState({ registerPwrd: event.target.value });\n  };\n\n  onRepeatPwrdChange = (event) => {\n    this.setState({ secondPwrd: event.target.value });\n  };\n\n  removeErrors = (targetId) => {\n    const item = document.getElementsByClassName(targetId)[0];\n    item.classList.remove(\"active\");\n  };\n\n  showEmailError = () => {\n    this.removeErrors(\"error-box credentials\");\n\n    const emailError = document.getElementsByClassName(\n      \"error-box invalid-email\"\n    )[0];\n\n    emailError.classList.add(\"active\");\n\n    setTimeout(() => {\n      this.removeErrors(\"error-box invalid-email\");\n    }, 10000);\n  };\n\n  showRegisterError = () => {\n    this.removeErrors(\"error-box pwrds-not-match\");\n\n    const {\n      registerName,\n      registerUser,\n      registerEmail,\n      registerPwrd,\n      secondPwrd,\n    } = this.state;\n\n    if (\n      registerName !== \"\" ||\n      registerUser !== \"\" ||\n      registerEmail !== \"\" ||\n      registerPwrd !== \"\" ||\n      secondPwrd !== \"\"\n    ) {\n      const credentialsError = document.getElementsByClassName(\n        \"error-box credentials\"\n      )[0];\n\n      credentialsError.classList.add(\"active\");\n\n      setTimeout(() => {\n        this.removeErrors(\"error-box credentials\");\n      }, 10000);\n    }\n  };\n\n  saveAuthTokenInSession = (token) => {\n    return window.sessionStorage.setItem(\"token\", token);\n  };\n\n  onSubmitRegister = () => {\n    const {\n      registerName,\n      registerUser,\n      registerEmail,\n      registerPwrd,\n      secondPwrd,\n    } = this.state;\n\n    if (validator.isEmail(registerEmail)) {\n      this.removeErrors(\"error-box invalid-email\");\n\n      if (registerPwrd === secondPwrd) {\n        const element = document.querySelector(\"#loading-circle-animation\");\n\n        console.log(\"Register Lottie loaded\");\n        this.props.lottie.loadAnimation({\n          container: element, // the dom element that will contain the animation\n          renderer: \"svg\",\n          loop: true,\n          autoplay: true,\n          animationData: loadingAnimation,\n        });\n\n        fetch(`${ServerApi}/register`, {\n          method: \"post\",\n          headers: { \"Content-Type\": \"application/json\" },\n          body: JSON.stringify({\n            givenName: registerName,\n            givenUser: registerUser,\n            givenEmail: registerEmail,\n            givenPassword: registerPwrd,\n          }),\n        })\n          .then((response) => response.json())\n          .then((data) => {\n            const { success, userId, token } = data;\n\n            if (success) {\n              this.saveAuthTokenInSession(token);\n              this.props\n                .getUserProfile(userId, token)\n                .then((user) => {\n                  if (user.id) {\n                    this.props.loadUsers(user);\n                    this.props.onRouteChange(\"home\");\n                  }\n                })\n                .catch((error) => console.log(error));\n            } else {\n              this.showRegisterError();\n            }\n          })\n          .catch((error) =>\n            alert(`Server error...\\nTry again later\\n\\nError: ${error}`)\n          )\n          .finally(() => {\n            this.props.lottie.destroy();\n          });\n      } else {\n        const notMatchPwrds = document.getElementsByClassName(\n          \"error-box pwrds-not-match\"\n        )[0];\n\n        notMatchPwrds.classList.add(\"active\");\n\n        setTimeout(() => {\n          this.removeErrors(\"error-box pwrds-not-match\");\n        }, 10000);\n      }\n    } else {\n      this.showEmailError();\n    }\n  };\n\n  checkInputs = () => {\n    let goHome = true;\n    const {\n      registerName,\n      registerUser,\n      registerEmail,\n      registerPwrd,\n      secondPwrd,\n    } = this.state;\n\n    const nameError = document.getElementsByClassName(\"error-box name\")[0];\n    const userError = document.getElementsByClassName(\"error-box user\")[0];\n    const emailError = document.getElementsByClassName(\"error-box email\")[0];\n    const pwrdError = document.getElementsByClassName(\"error-box password\")[0];\n    const repeatPwrdError = document.getElementsByClassName(\n      \"error-box repeat-password\"\n    )[0];\n\n    let id = window.setTimeout(function () {}, 0);\n    while (id--) {\n      window.clearTimeout(id); // Will do nothing if there are no timeouts\n    }\n\n    if (registerName.trim() === \"\") {\n      nameError.classList.add(\"active\");\n\n      setTimeout(() => {\n        this.removeErrors(\"error-box name\");\n      }, 10000);\n\n      goHome = false;\n    } else {\n      this.removeErrors(\"error-box name\");\n    }\n\n    if (registerUser.trim() === \"\") {\n      userError.classList.add(\"active\");\n\n      setTimeout(() => {\n        this.removeErrors(\"error-box user\");\n      }, 10000);\n\n      goHome = false;\n    } else {\n      this.removeErrors(\"error-box user\");\n    }\n\n    if (registerEmail.trim() === \"\") {\n      emailError.classList.add(\"active\");\n\n      setTimeout(() => {\n        this.removeErrors(\"error-box email\");\n      }, 10000);\n\n      goHome = false;\n    } else {\n      this.removeErrors(\"error-box email\");\n    }\n\n    if (registerPwrd.trim() === \"\") {\n      pwrdError.classList.add(\"active\");\n\n      setTimeout(() => {\n        this.removeErrors(\"error-box password\");\n      }, 10000);\n\n      goHome = false;\n    } else {\n      this.removeErrors(\"error-box password\");\n    }\n\n    if (secondPwrd.trim() === \"\") {\n      repeatPwrdError.classList.add(\"active\");\n\n      setTimeout(() => {\n        this.removeErrors(\"error-box repeat-password\");\n      }, 10000);\n\n      goHome = false;\n    } else {\n      this.removeErrors(\"error-box repeat-password\");\n    }\n\n    if (goHome) {\n      this.onSubmitRegister();\n    } else {\n      this.removeErrors(\"error-box credentials\");\n      this.removeErrors(\"error-box pwrds-not-match\");\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"register-container\">\n        <div className=\"register-box\">\n          <h1>Register</h1>\n\n          <div className=\"register-inputs-div\">\n            <input\n              onChange={this.onNameChange}\n              id=\"name-input\"\n              type=\"text\"\n              placeholder=\"Full name \"\n            ></input>\n            <input\n              onChange={this.onUserChange}\n              id=\"user-input\"\n              type=\"text\"\n              placeholder=\"Username\"\n            ></input>\n            <input\n              onChange={this.onEmailChange}\n              id=\"email-input\"\n              type=\"email\"\n              placeholder=\"Email\"\n            ></input>\n            <input\n              onChange={this.onPwrdChange}\n              id=\"pwrd-input\"\n              type=\"password\"\n              placeholder=\"Password\"\n            ></input>\n            <input\n              onChange={this.onRepeatPwrdChange}\n              id=\"repeat-pwrd-input\"\n              type=\"password\"\n              placeholder=\"Repeat password\"\n            ></input>\n          </div>\n\n          <div className=\"register-buttons-div\">\n            <hr className=\"horizontal-line\"></hr>\n            <button onClick={this.checkInputs}>Register</button>\n            <button\n              onClick={() => {\n                this.props.onRouteChange(\"signin\");\n              }}\n            >\n              I already have an account\n            </button>\n          </div>\n        </div>\n        <div id=\"loading-circle-animation\"></div>\n\n        <div className=\"errors-container\">\n          <div className=\"error-box name\">\n            <p>Full name field is empty</p>\n            <img\n              alt=\"\"\n              src={closeBtn}\n              className=\"close\"\n              onClick={() => {\n                const nameError =\n                  document.getElementsByClassName(\"error-box name\")[0];\n                nameError.classList.remove(\"active\");\n              }}\n            ></img>\n          </div>\n\n          <div className=\"error-box user\">\n            <p>Username field is empty</p>\n            <img\n              alt=\"\"\n              src={closeBtn}\n              className=\"close\"\n              onClick={() => {\n                const userError =\n                  document.getElementsByClassName(\"error-box user\")[0];\n                userError.classList.remove(\"active\");\n              }}\n            ></img>\n          </div>\n\n          <div className=\"error-box email\">\n            <p>Email field is empty</p>\n            <img\n              alt=\"\"\n              src={closeBtn}\n              className=\"close\"\n              onClick={() => {\n                const emailError =\n                  document.getElementsByClassName(\"error-box email\")[0];\n                emailError.classList.remove(\"active\");\n              }}\n            ></img>\n          </div>\n\n          <div className=\"error-box password\">\n            <p>Password field is empty</p>\n            <img\n              alt=\"\"\n              src={closeBtn}\n              className=\"close\"\n              onClick={() => {\n                const pwrdError =\n                  document.getElementsByClassName(\"error-box password\")[0];\n                pwrdError.classList.remove(\"active\");\n              }}\n            ></img>\n          </div>\n\n          <div className=\"error-box repeat-password\">\n            <p>Repeat password field is empty</p>\n            <img\n              alt=\"\"\n              src={closeBtn}\n              className=\"close\"\n              onClick={() => {\n                const repeatPwrdError = document.getElementsByClassName(\n                  \"error-box repeat-password\"\n                )[0];\n                repeatPwrdError.classList.remove(\"active\");\n              }}\n            ></img>\n          </div>\n\n          <div className=\"error-box pwrds-not-match\">\n            <p>Given passwords don't match each other</p>\n            <img\n              alt=\"\"\n              src={closeBtn}\n              className=\"close\"\n              onClick={() => {\n                const notMatchPwrd = document.getElementsByClassName(\n                  \"error-box pwrds-not-match\"\n                )[0];\n                notMatchPwrd.classList.remove(\"active\");\n              }}\n            ></img>\n          </div>\n\n          <div className=\"error-box credentials\">\n            <p>Looks like you already have an account</p>\n            <img\n              alt=\"\"\n              src={closeBtn}\n              className=\"close\"\n              onClick={() => {\n                const credentialsError = document.getElementsByClassName(\n                  \"error-box credentials\"\n                )[0];\n                credentialsError.classList.remove(\"active\");\n              }}\n            ></img>\n          </div>\n\n          <div className=\"error-box invalid-email\">\n            <p>Invalid Email</p>\n            <img\n              alt=\"\"\n              src={closeBtn}\n              className=\"close\"\n              onClick={() => {\n                const invalidEmail = document.getElementsByClassName(\n                  \"error-box invalid-email\"\n                )[0];\n                invalidEmail.classList.remove(\"active\");\n              }}\n            ></img>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Register;\n","import { useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./Modal.css\";\n\nconst modalRoot = document.getElementById(\"modal-root\");\n\nconst Modal = ({ children }) => {\n  const element = document.createElement(\"div\");\n\n  useEffect(() => {\n    modalRoot.appendChild(element);\n\n    return () => {\n      modalRoot.removeChild(element);\n    };\n  }, []);\n\n  return ReactDOM.createPortal(children, element);\n};\n\nexport default Modal;\n","import \"./Profile.css\";\nimport { useState } from \"react\";\nimport ServerApi from \"../../Services/ServerApi\";\n\nconst Profile = ({ toggleModal, user, loadUsers }) => {\n  // Update user in the database\n  const updateUser = () => {\n    if (\n      user.name !== userFields.name ||\n      user.email !== userFields.email ||\n      user.birthday !== userFields.birthday ||\n      user.avatar_url !== userFields.avatar_url\n    ) {\n      const confirmUser = window.confirm(\n        `Dear user.\\n\\nYou're about to update your profile to:\\n\\nName: ${userFields.name}\\nEmail: ${userFields.email}\\nBirthday: ${userFields.birthday}\\nAvatar URL: ${userFields.avatar_url}`\n      );\n\n      if (confirmUser) {\n        fetch(`${ServerApi}/profile/${user.id}`, {\n          method: \"post\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: window.sessionStorage.getItem(\"token\"),\n            user_id: user.id,\n          },\n          body: JSON.stringify({\n            formInput: userFields,\n          }),\n        })\n          .then((res) => res.json())\n          .then((data) => {\n            if (data.code) {\n              loadUsers({\n                ...user,\n                ...userFields,\n              });\n            }\n\n            alert(data.msg);\n          })\n          .catch((error) => alert(\"We're sorry.\\nSomething went wrong.\"));\n      }\n    } else {\n      alert(\"Nothing to update.\");\n    }\n  };\n\n  // Update user fields on React state\n  const updateUserFields = (event) => {\n    const { value } = event.target;\n\n    switch (event.target.className) {\n      case \"user-name\":\n        setUserFields({\n          ...userFields,\n          name: value,\n        });\n        break;\n      case \"user-email\":\n        setUserFields({\n          ...userFields,\n          email: value,\n        });\n        break;\n      case \"user-birthday\":\n        setUserFields({\n          ...userFields,\n          birthday: value,\n        });\n        break;\n      case \"user-avatar\":\n        setUserFields({\n          ...userFields,\n          avatar_url: value,\n        });\n        break;\n      default:\n        console.warn(\"Tried to update a field that doesn't exist.\");\n    }\n  };\n\n  const [userFields, setUserFields] = useState({\n    name: user.name,\n    email: user.email,\n    birthday: user.birthday,\n    avatar_url: user.avatar_url,\n  });\n\n  return (\n    <div className=\"profile-modal\">\n      <article className=\"modal-container\">\n        <main className=\"modal-info-main\">\n          <div className=\"close-modal-x\" onClick={() => toggleModal()}>\n            &times;\n          </div>\n          <img\n            src={user.avatar_url?.trim() || `https://robohash.org/${user.id}`}\n            className=\"modal-profile-img\"\n            alt=\"avatar\"\n          />\n          <h1>{user.name}</h1>\n          <h4>Images submited: {user.entries}</h4>\n          <p>Member since: {new Date(user.joined).toLocaleDateString()}</p>\n\n          <hr />\n\n          <h1>User information</h1>\n\n          <div className=\"user-input-container\">\n            <span>Name</span>\n            <input\n              type=\"text\"\n              className=\"user-name\"\n              defaultValue={user.name || \"Add your name\"}\n              onChange={updateUserFields}\n            ></input>\n          </div>\n\n          <div className=\"user-input-container\">\n            <span>Email</span>\n            <input\n              type=\"text\"\n              className=\"user-email\"\n              defaultValue={user.email || \"Add your email\"}\n              onChange={updateUserFields}\n            ></input>\n          </div>\n\n          <div className=\"user-input-container\">\n            <span>Birthday</span>\n            <input\n              type=\"date\"\n              defaultValue={\n                userFields.birthday\n                  ? new Date(user.birthday).toISOString().split(\"T\")[0]\n                  : null\n              }\n              className=\"user-birthday\"\n              onChange={updateUserFields}\n            ></input>\n          </div>\n\n          <div className=\"user-input-container\">\n            <span>Avatar URL</span>\n            <input\n              type=\"text\"\n              className=\"user-avatar\"\n              defaultValue={user.avatar_url?.trim() || \"Add an avatar url\"}\n              onChange={updateUserFields}\n            ></input>\n          </div>\n        </main>\n\n        <div className=\"btns-container\">\n          <button id=\"modal-save\" onClick={updateUser}>\n            Save\n          </button>\n\n          <button id=\"modal-cancel\" onClick={() => toggleModal()}>\n            Close\n          </button>\n        </div>\n      </article>\n    </div>\n  );\n};\n\nexport default Profile;\n","import \"./DisableParticles.css\";\n\nconst disableParticles = () => {\n  const toggleParticles = () => {\n    document.querySelector(\".particles\").classList.toggle(\"disabled\");\n  };\n\n  return (\n    <div className=\"disable-particles-container\">\n      <button onClick={toggleParticles}>Toggle Particles</button>\n    </div>\n  );\n};\n\nexport default disableParticles;\n","const particlesOptions = {\n  particles: {\n    collisions: {\n      enable: false,\n    },\n    number: {\n      value: 25,\n    },\n  },\n};\n\nexport default particlesOptions;\n","import React, { Component, Fragment } from \"react\";\n/* CSS stylesheet */\nimport \"./App.css\";\n/* React Components */\nimport Navigation from \"./Components/Navigation/Navigation\";\nimport Logo from \"./Components/Logo/Logo\";\nimport ImageLinkForm from \"./Components/ImageLinkForm/ImageLinkForm\";\nimport Rank from \"./Components/Rank/Rank\";\nimport FaceRecognition from \"./Components/FaceRecognition/FaceRecognition\";\nimport Signin from \"./Components/Signin/Signin\";\nimport Register from \"./Components/Register/Register\";\nimport Modal from \"./Components/Modal/Modal\";\nimport Profile from \"./Components/Profile/Profile\";\nimport DisableParticles from \"./Components/DisableParticles/DisableParticles\";\n/* Particles */\nimport Particles from \"react-particles-js\";\nimport particlesOptions from \"./Settings/particlesOptions\";\n/* Server IP */\nimport ServerApi from \"./Services/ServerApi\";\n/* Animation library and assets */\nimport lottie from \"lottie-web\";\nimport loadingAnimation from \"./Assets/animations/loading_api.json\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      input: \"\",\n      imageUrl: \"\",\n      box: [],\n      route: \"signin\",\n      isSignedIn: false,\n      isLoading: false,\n      loadingState: \"\",\n      isProfileOpen: false,\n\n      user: {\n        id: \"\",\n        name: \"\",\n        userName: \"\",\n        email: \"\",\n        entries: 0,\n        birthday: \"\",\n        avatar_url: \"\",\n        joined: \"\",\n      },\n    };\n\n    this.baseState = this.state;\n  }\n\n  getUserProfile(id, token) {\n    return new Promise((resolve, reject) => {\n      fetch(`${ServerApi}/profile/${id}`, {\n        method: \"get\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: token,\n          user_id: id,\n        },\n      })\n        .then((res) => res.json())\n        .then((user) => resolve(user))\n        .catch((error) => reject(error));\n    });\n  }\n\n  componentDidMount() {\n    const token = window.sessionStorage.getItem(\"token\");\n\n    if (token) {\n      fetch(`${ServerApi}/signin`, {\n        method: \"post\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: token,\n        },\n      })\n        .then((res) => res.json())\n        .then((data) => {\n          if (data.id) {\n            this.getUserProfile(data.id, token)\n              .then((user) => {\n                if (user.id) {\n                  this.loadUsers(user);\n                  this.onRouteChange(\"home\");\n                } else {\n                  console.warn(\"Invalid User\");\n                }\n              })\n              .catch(console.warn);\n          } else {\n            console.warn(\"Invalid Token\");\n          }\n        })\n        .catch(console.warn);\n    }\n  }\n\n  componentDidUpdate() {\n    const element = document.querySelector(\"#link-loading-animation\");\n\n    lottie.loadAnimation({\n      container: element, // the dom element that will contain the animation\n      renderer: \"svg\",\n      loop: true,\n      autoplay: true,\n      animationData: loadingAnimation,\n      rendererSettings: {\n        clearCanvas: false,\n        id: \"loading-animation-id\",\n      },\n    });\n  }\n\n  loadUsers = (user) => {\n    const {\n      id,\n      name,\n      user_name,\n      email,\n      entries,\n      avatar_url,\n      birthday,\n      joined,\n    } = user;\n\n    this.setState({\n      user: {\n        id,\n        name,\n        userName: user_name,\n        email,\n        entries,\n        birthday,\n        avatar_url,\n        joined,\n      },\n    });\n  };\n\n  calculateFaceLocation = (data) => {\n    if (!data.outputs) {\n      this.setState({ isLoading: false, loadingState: \"\" });\n\n      return alert(\n        \"Something went wrong ...\\nCheck if the URL is a valid image\"\n      );\n    }\n\n    const clarifaiFace = data?.outputs[0]?.data.regions;\n\n    const image = document.getElementById(\"input-image\");\n    const width = Number(image.width);\n    const height = Number(image.height);\n\n    const faceBoxes = clarifaiFace.map((box_obj) => {\n      let obj = box_obj.region_info.bounding_box;\n      obj.left_col = obj.left_col * width;\n      obj.top_row = obj.top_row * height;\n      obj.right_col = width - obj.right_col * width;\n      obj.bottom_row = height - obj.bottom_row * height;\n\n      return obj;\n    });\n\n    this.setState({ box: faceBoxes, isLoading: false, loadingState: \"\" });\n  };\n\n  onInputChange = (event) => {\n    this.setState({ input: event.target.value });\n  };\n\n  onBtnSubmit = () => {\n    const { input } = this.state;\n    if (input) {\n      this.setState(\n        {\n          imageUrl: this.state.input,\n          box: [],\n          isLoading: true,\n          loadingState: \"Requesting data from API ...\",\n        },\n        this.requestApi\n      );\n    }\n  };\n\n  clearState = () => {\n    this.setState(this.baseState);\n  };\n\n  requestApi = () => {\n    window.scrollTo(0, document.body.scrollHeight);\n\n    const token = window.sessionStorage.getItem(\"token\");\n    const { id } = this.state.user;\n\n    fetch(`${ServerApi}/image_url`, {\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: token,\n        user_id: id,\n      },\n      body: JSON.stringify({\n        input: this.state.imageUrl,\n      }),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        if (data) {\n          fetch(`${ServerApi}/image`, {\n            method: \"put\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n              Authorization: token,\n              user_id: id,\n            },\n            body: JSON.stringify({\n              id,\n            }),\n          })\n            .then((response) => {\n              if (response.status !== 200) {\n                alert(\"Something went wrong!\");\n                throw Error;\n              }\n\n              return response.json();\n            })\n            .then((count) => {\n              this.setState(Object.assign(this.state.user, { entries: count }));\n              this.calculateFaceLocation(data);\n            })\n            .catch((error) => {\n              this.setState({ isLoading: false, loadingState: \"\" });\n              console.log(error);\n            });\n        }\n      })\n      .catch(console.error);\n  };\n\n  onRouteChange = (route) => {\n    if (route === \"signin\") {\n      this.setState(this.baseState);\n    } else if (route === \"home\") {\n      this.setState({ isSignedIn: true });\n    }\n    this.setState({ route });\n  };\n\n  showMessage = (facesNumber) => {\n    window.scrollTo(0, document.body.scrollHeight);\n\n    return <h1 className=\"info-message\">Detected {facesNumber} faces</h1>;\n  };\n\n  toggleModal = () => {\n    this.setState((prevState) => ({\n      ...prevState,\n      isProfileOpen: !prevState.isProfileOpen,\n    }));\n  };\n\n  render() {\n    const {\n      isSignedIn,\n      route,\n      box,\n      imageUrl,\n      user,\n      isLoading,\n      loadingState,\n      isProfileOpen,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        <Particles className=\"particles\" params={particlesOptions} />\n        <Navigation\n          user={user}\n          actualRoute={route}\n          onRouteChange={this.onRouteChange}\n          isSignedIn={isSignedIn}\n          toggleModal={this.toggleModal}\n        />\n        {isProfileOpen && (\n          <Modal>\n            <Profile\n              toggleModal={this.toggleModal}\n              user={user}\n              loadUsers={this.loadUsers}\n            />\n          </Modal>\n        )}\n\n        {route === \"home\" ? (\n          <div className=\"homeContainer\">\n            <Logo />\n            <Rank user={user} />\n            <ImageLinkForm\n              clearState={this.clearState}\n              onInputChange={this.onInputChange}\n              onBtnSubmit={this.onBtnSubmit}\n            />\n            {isLoading ? (\n              <div className=\"loading-message\">\n                <div id=\"link-loading-animation\"></div>\n                <h1 className=\"info-message\">{loadingState}</h1>\n              </div>\n            ) : null}\n            {box.length ? this.showMessage(box.length) : null}\n            <FaceRecognition box={box} imageUrl={imageUrl} />\n\n            <DisableParticles />\n          </div>\n        ) : route === \"signin\" ? (\n          <Fragment>\n            <Signin\n              lottie={lottie}\n              loadUsers={this.loadUsers}\n              onRouteChange={this.onRouteChange}\n              getUserProfile={this.getUserProfile}\n            />\n            <DisableParticles />\n          </Fragment>\n        ) : (\n          <Fragment>\n            <Register\n              lottie={lottie}\n              loadUsers={this.loadUsers}\n              onRouteChange={this.onRouteChange}\n              getUserProfile={this.getUserProfile}\n            />\n            <DisableParticles />\n          </Fragment>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"tachyons\";\nimport \"animate.css\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}